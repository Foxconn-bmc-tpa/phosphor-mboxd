TEST_MBOX_VPNOR_SRCS = common.c pnor_partition_table.cpp \
		       %reldir%/tmpd.cpp

VPNOR_LDADD = -lstdc++fs \
	$(SDBUSPLUS_LIBS) \
	$(PHOSPHOR_LOGGING_LIBS) \
	$(PHOSPHOR_DBUS_INTERFACES_LIBS)

test_vpnor_create_pnor_partition_table_SOURCES = \
	$(TEST_MBOX_VPNOR_SRCS) \
	%reldir%/create_pnor_partition_table.cpp
test_vpnor_create_pnor_partition_table_LDFLAGS = $(OESDK_TESTCASE_FLAGS)
test_vpnor_create_pnor_partition_table_LDADD = $(VPNOR_LDADD)

test_vpnor_create_read_window_partition_exists_SOURCES = \
	$(TEST_MBOX_VPNOR_SRCS) $(TEST_MOCK_SRCS) \
	mboxd_msg.c \
	mboxd_windows.c \
	mboxd_lpc.c \
	mboxd_lpc_virtual.cpp \
	mboxd_pnor_partition_table.cpp \
	mboxd_flash_virtual.cpp \
	pnor_partition.cpp \
	%reldir%/create_read_window_partition_exists.cpp
test_vpnor_create_read_window_partition_exists_LDFLAGS = $(OESDK_TESTCASE_FLAGS)
test_vpnor_create_read_window_partition_exists_LDADD = $(VPNOR_LDADD)

test_vpnor_write_patch_SOURCES = \
	$(TEST_MBOX_VPNOR_SRCS) \
	mboxd_pnor_partition_table.cpp \
	mboxd_flash_virtual.cpp \
	mtd.c \
	pnor_partition.cpp \
	%reldir%/write_patch.cpp
test_vpnor_write_patch_LDFLAGS = $(OESDK_TESTCASE_FLAGS)
test_vpnor_write_patch_LDADD = $(VPNOR_LDADD)

test_vpnor_write_prsv_SOURCES = \
	$(TEST_MBOX_VPNOR_SRCS) \
	mboxd_pnor_partition_table.cpp \
	mboxd_flash_virtual.cpp \
	mtd.c \
	pnor_partition.cpp \
	%reldir%/write_prsv.cpp
test_vpnor_write_prsv_LDFLAGS = $(OESDK_TESTCASE_FLAGS)
test_vpnor_write_prsv_LDADD = $(VPNOR_LDADD)

test_vpnor_write_ro_SOURCES = \
	$(TEST_MBOX_VPNOR_SRCS) \
	mboxd_pnor_partition_table.cpp \
	mboxd_flash_virtual.cpp \
	mtd.c \
	pnor_partition.cpp \
	%reldir%/write_ro.cpp
test_vpnor_write_ro_LDFLAGS = $(OESDK_TESTCASE_FLAGS)
test_vpnor_write_ro_LDADD = $(VPNOR_LDADD)

test_vpnor_write_rw_SOURCES = \
	$(TEST_MBOX_VPNOR_SRCS) \
	mboxd_pnor_partition_table.cpp \
	mboxd_flash_virtual.cpp \
	mtd.c \
	pnor_partition.cpp \
	%reldir%/write_rw.cpp
test_vpnor_write_rw_LDFLAGS = $(OESDK_TESTCASE_FLAGS)
test_vpnor_write_rw_LDADD = $(VPNOR_LDADD)

test_vpnor_toc_no_name_SOURCES = \
	common.c \
	pnor_partition_table.cpp \
	%reldir%/toc_no_name.cpp
test_vpnor_toc_no_name_LDFLAGS = $(OESDK_TESTCASE_FLAGS)
test_vpnor_toc_no_name_LDADD = $(VPNOR_LDADD)

test_vpnor_toc_start_gt_end_SOURCES = \
	common.c \
	pnor_partition_table.cpp \
	%reldir%/toc_start_gt_end.cpp
test_vpnor_toc_start_gt_end_LDFLAGS = $(OESDK_TESTCASE_FLAGS)
test_vpnor_toc_start_gt_end_LDADD = $(VPNOR_LDADD)

if VIRTUAL_PNOR_ENABLED
check_PROGRAMS += \
	%reldir%/create_pnor_partition_table \
	%reldir%/create_read_window_partition_exists \
	%reldir%/write_prsv \
	%reldir%/write_ro \
	%reldir%/write_rw \
	%reldir%/write_patch \
	%reldir%/toc_no_name \
	%reldir%/toc_start_gt_end

XFAIL_TESTS += \
	%reldir%/toc_start_gt_end
endif
